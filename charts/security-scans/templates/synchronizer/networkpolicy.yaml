{{- $components := fromYaml (include "components" .) }}
{{- if and .Values.global.networkPolicy.enabled $components.synchronizer.enabled }}
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ .Values.synchronizer.name }}
  namespace: {{ include "randoli-agent.namespace" . }}
  annotations:
    {{- include "kubescape-operator.annotations" (dict "Values" .Values) | nindent 4 }}
  labels:
    {{- include "kubescape-operator.labels" (dict "Chart" .Chart "Release" .Release "Values" .Values "app" .Values.synchronizer.name "tier" .Values.global.namespaceTier) | nindent 4 }}
spec:
  podSelector:
    matchLabels:
      {{- include "kubescape-operator.selectorLabels" (dict "Chart" .Chart "Release" .Release "Values" .Values "app" .Values.synchronizer.name) | nindent 14 }}
  policyTypes:
    - Ingress
  {{- if .Values.global.networkPolicy.createEgressRules }}
    - Egress
  egress:
      # - synchronizer server
    - ports:
      - port: 443
        protocol: TCP
{{ tpl (.Files.Get "assets/api-server-egress-rules.yaml") . | indent 4 }}
{{ tpl (.Files.Get "assets/common-egress-rules.yaml") . | indent 4 }}
  {{- end }}
  ingress:
    - from:
        - podSelector:
            matchLabels:
              {{- include "kubescape-operator.selectorLabels" (dict "Chart" .Chart "Release" .Release "Values" .Values "app" .Values.nodeAgent.name) | nindent 14 }}
      ports:
        - port: {{ .Values.synchronizer.service.port }}
          protocol: TCP
{{- end }}
