apiVersion: apps/v1
kind: Deployment
metadata:
  name: randoli-rok-netobserv-controller-manager
  labels:
    app: netobserv-operator
    control-plane: controller-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      app: netobserv-operator
      control-plane: controller-manager
  strategy: {}
  template:
    metadata:
      labels:
        app: netobserv-operator
        control-plane: controller-manager
    spec:
      initContainers:
        - name: generate-cert
          image: python:3.11-slim
          command:
          - bash
          - -c
          - |
            # Metrics cert
            openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
              -subj "/CN=netobserv-metrics-service.{{ .Release.Namespace }}.svc" \
              -keyout /metrics/tls.key \
              -out /metrics/tls.crt && \
            chmod 0644 /metrics/tls.key /metrics/tls.crt

            # Webhook cert
            openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
              -subj "/CN=netobserv-webhook-service.{{ .Release.Namespace }}.svc" \
              -keyout /webhook/tls.key \
              -out /webhook/tls.crt && \
            chmod 0644 /webhook/tls.key /webhook/tls.crt

          volumeMounts:
            - name: metrics-certs
              mountPath: /metrics
            - name: webhook-certs
              mountPath: /webhook
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            runAsNonRoot: true
            allowPrivilegeEscalation: false    
      containers:
        - args:
            - --health-probe-bind-address=:8081
            - --metrics-bind-address=:8443
            - --leader-elect
            - --ebpf-agent-image=$(RELATED_IMAGE_EBPF_AGENT)
            - --flowlogs-pipeline-image=$(RELATED_IMAGE_FLOWLOGS_PIPELINE)
            - --console-plugin-image=$(RELATED_IMAGE_CONSOLE_PLUGIN)
            - --downstream-deployment=$(DOWNSTREAM_DEPLOYMENT)
            - --profiling-bind-address=$(PROFILING_BIND_ADDRESS)
            - --metrics-cert-file=/etc/tls/private/tls.crt
            - --metrics-cert-key-file=/etc/tls/private/tls.key
          command:
            - /manager
          env:
            - name: RELATED_IMAGE_EBPF_AGENT
              value: quay.io/netobserv/netobserv-ebpf-agent:v1.8.2-community
            - name: RELATED_IMAGE_FLOWLOGS_PIPELINE
              value: quay.io/netobserv/flowlogs-pipeline:v1.8.2-community
            - name: RELATED_IMAGE_CONSOLE_PLUGIN
              value: '{{ if .Values.standaloneConsole.enable }}quay.io/netobserv/network-observability-standalone-frontend:v1.8.2-community{{ else }}quay.io/netobserv/network-observability-console-plugin:v1.8.2-community{{ end }}'
            - name: DOWNSTREAM_DEPLOYMENT
              value: "false"
            - name: PROFILING_BIND_ADDRESS
          image: quay.io/netobserv/network-observability-operator:1.8.2-community
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          name: manager
          ports:
            - containerPort: 9443
              name: webhook-server
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            limits:
              memory: 400Mi
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
          volumeMounts:
            - mountPath: /tmp/k8s-webhook-server/serving-certs
              name: webhook-certs
              readOnly: true
            - mountPath: /etc/tls/private
              name: metrics-certs
              readOnly: true  
      securityContext:
        runAsNonRoot: true
      serviceAccountName: netobserv-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
        - name: metrics-certs
          emptyDir: {}
        - name: webhook-certs
          emptyDir: {}
      {{- if or .Values.tolerations .Values.global.tolerations }}
      tolerations:
        {{- with .Values.tolerations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.global.tolerations }}
        {{- toYaml . | nindent 8 }}
        {{- end }} 
      {{- end }}
      {{- if or .Values.nodeSelector .Values.global.nodeSelector }}
      nodeSelector:
        {{- with .Values.nodeSelector }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.global.nodeSelector }}
        {{- toYaml . | nindent 8 }}
        {{- end }} 
      {{- end }}
      {{- if or .Values.affinity .Values.global.affinity }}
      affinity:
        {{- with .Values.affinity }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.global.affinity }}
        {{- toYaml . | nindent 8 }}
        {{- end }} 
      {{- end }}   
