global:
  prometheus:
    url: http://my-prometheus-server.prometheus.svc.cluster.local:80
    secretName: ""
    usernameKey: ""
    passwordKey: ""
    bearerTokenKey: token
image:
  registry: docker.io
  repository: randoli/insights-agent
  tag: "1.8"
  digest: ""
  ## Specify a imagePullPolicy
  ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
  ## ref: https://kubernetes.io/docs/user-guide/images/#pre-pulling-images
  ##
  pullPolicy: Always

imagePullSecrets: []

secrets:
  cert: insights-agent-cert
  config: insights-agent-secret

labels:
  app: app-insights-agent

deploymentAnnotations: {}

resources:
  limits:
    cpu: 150m
    memory: 512Mi
  requests:
    cpu: 50m
    memory: 256Mi

logAnalytics:
  # If enabled, the agent will query for container logs to augment events
  collectLogs: true

anomalyDetection:
  # Defaults anomaly detection list contains detections for:
  # - memory usage spikes
  # - postgres transactions latency spikes
  # - postgres active connections spike
  # - JVM heap memory spike
  # - Golang heap memory usage spike
  defaultsQueries:
    enabled: true
  customQueries:
    # Path for user defined queries, queries should be in YAML format
    path: /prometheus

costManagement:
  opencost:
    # If enabled, OpenCost will be deployed
    install: true
    # Only required if installOpencost is false
    # OpenCost URL for instance already running and not installed through this chart
    url: 
    metrics:
      serviceMonitor:
        enabled: true

  # Move to this place
  rightsizingRecommendations:
    enabled: false
    # If enabled, VerticalPodAutoscaler will be installed
    installVpa: false

securityScans:
  # Install kubescape-operator
  # Kubescape-operator is required to run security scans in the cluster
  installKubescape: false
 
  # Default value is OFF
  # OFF|INTERVAL_SCANNING
  mode: 'OFF'
  # Only required if INTERVAL_SCANNING is set as mode
  cronSpec: '0 10,20 * * *'

  # -- set the image pull secrets for Kubescape to be able to pull from private image registry
  imagePullSecrets: ""

# -- Toleration labels for pod assignment
tolerations: []
# -- Node labels for pod assignment
nodeSelector: {}
# -- Affinity settings for pod assignment
affinity: {}
# -- Assign custom TopologySpreadConstraints rules
topologySpreadConstraints: []

extraEnv: []
extraEnvFrom: []

extraVolumes: []
  # - name: extra-queries
  #   configMap:
  #     name: extra-queries
extraVolumeMounts: []
  # - name: extra-queries
  #   mountPath: /prometheus

securityContext: {}

serviceAccount:
  create: true
  # If not set and create is true, a name is generated using the fullname template
  # name: ""
  automountServiceAccountToken: true
  annotations: {}
  labels: {}