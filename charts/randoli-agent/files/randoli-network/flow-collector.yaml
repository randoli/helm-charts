apiVersion: flows.netobserv.io/v1beta2
kind: FlowCollector
metadata:
  name: cluster
spec:
  namespace: netobserv
  consolePlugin:
    advanced:
      env:
        TEST_CONSOLE: "true"
  prometheus:
    querier:
      manual:
        url: {{ include "prometheus-server-endpoint" . }}
  loki:
    enable: false
  processor:
    addZone: true
    subnetLabels:
      customLabels:
        - cidrs:
            - 10.0.0.0/8
            - 172.16.0.0/12
            - 192.168.0.0/16
            - 127.0.0.0/8
            - 169.254.0.0/16
          name: private
  exporters:
  - type: OpenTelemetry
    openTelemetry:
      targetHost: "randoli-otel-collector.{{ .Release.Namespace }}.svc"
      targetPort: 4317
      protocol: grpc
      logs:
        enable: false
      metrics:
        enable: true
      fieldsMapping:
        - input: "SrcAddr"
          output: "source.address"
        - input: "SrcMac"
          output: "source.mac"
        - input: "SrcPort"
          output: "source.port"
        - input: "SrcK8S_Name"
          output: "source.k8s.name"
        - input: "SrcK8S_Type"
          output: "source.k8s.kind"
        - input: "SrcK8S_OwnerName"
          output: "source.k8s.owner.name"
        - input: "SrcK8S_OwnerType"
          output: "source.k8s.owner.kind"
        - input: "SrcK8S_Namespace"
          output: "source.k8s.namespace.name"
        - input: "SrcK8S_HostIP"
          output: "source.k8s.host.address"
        - input: "SrcK8S_HostName"
          output: "source.k8s.host.name"
        - input: "SrcK8S_Zone"
          output: "source.zone"
        - input: "SrcSubnetLabel"
          output: "source.subnet.label"
        - input: "DstAddr"
          output: "destination.address"
        - input: "DstMac"
          output: "destination.mac"
        - input: "DstPort"
          output: "destination.port"
        - input: "DstK8S_Name"
          output: "destination.k8s.name"
        - input: "DstK8S_Type"
          output: "destination.k8s.kind"
        - input: "DstK8S_OwnerName"
          output: "destination.k8s.owner.name"
        - input: "DstK8S_OwnerType"
          output: "destination.k8s.owner.kind"
        - input: "DstK8S_Namespace"
          output: "destination.k8s.namespace.name"
        - input: "DstK8S_HostIP"
          output: "destination.k8s.host.address"
        - input: "DstK8S_HostName"
          output: "destination.k8s.host.name"
        - input: "DstK8S_Zone"
          output: "destination.zone"
        - input: "DstSubnetLabel"
          output: "destination.subnet.label"
        - input: "Bytes"
          output: "bytes"
        - input: "Packets"
          output: "packets"
        - input: "Proto"
          output: "protocol"
        - input: "Flags"
          output: "tcp.flags"
        - input: "TimeFlowRttNs"
          output: "tcp.rtt"
        - input: "Interfaces"
          output: "interface.names"
        - input: "IfDirections"
          output: "interface.directions"
        - input: "FlowDirection"
          output: "host.direction"
        - input: "DnsErrno"
          output: "dns.errno"
        - input: "DnsFlags"
          output: "dns.flags"
        - input: "DnsFlagsResponseCode"
          output: "dns.responsecode"
        - input: "DnsId"
          output: "dns.id"
        - input: "DnsLatencyMs"
          output: "dns.latency"
        - input: "Dscp"
          output: "dscp"
        - input: "IcmpCode"
          output: "icmp.code"
        - input: "IcmpType"
          output: "icmp.type"
        - input: "K8S_ClusterName"
          output: "k8s.cluster.name"
        - input: "K8S_FlowLayer"
          output: "k8s.layer"
        - input: "PktDropBytes"
          output: "drops.bytes"
        - input: "PktDropPackets"
          output: "drops.packets"
        - input: "PktDropLatestDropCause"
          output: "drops.latestcause"
        - input: "PktDropLatestFlags"
          output: "drops.latestflags"
        - input: "PktDropLatestState"
          output: "drops.lateststate"
        - input: "TimeFlowEndMs"
          output: "timeflowend"
        - input: "TimeFlowStartMs"
          output: "timeflowstart"
        - input: "TimeReceived"
          output: "timereceived"