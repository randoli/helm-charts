{{- if eq (include "apply-network-crs" . | trim) "true" -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: apply-network-crs
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
spec:
  completions: 1
  parallelism: 1
  backoffLimit: 3 
  template:
    spec:
      serviceAccountName: network-cr-applier
      containers:
      - name: apply-crs
        image: docker.io/bitnamilegacy/kubectl:1.33.1
        command:
        - /bin/bash
        - -c
        - |
          echo "⏳ Waiting for NetObserv Operator pod..."
          kubectl wait --for=condition=Ready pod -l app=netobserv-operator,control-plane=controller-manager -n {{ .Release.Namespace }} --timeout=120s

          echo "✅ Operator is ready. Applying FlowCollector..."
          kubectl apply -f /crs/flow-collector.yaml
          
          echo "⏳ Waiting for 'netobserv' namespace to be created..."
          for i in {1..60}; do
            if kubectl get namespace netobserv >/dev/null 2>&1; then
              echo "✅ Namespace 'netobserv' exists."
              break
            fi
            sleep 2
          done
          
          if !kubectl get namespace netobserv >/dev/null 2>&1; then
            echo "❌ Timed out waiting for namespace 'netobserv'."
            exit 1
          fi
          
          echo "✅ Namespace is ready. Applying CRs..."
          kubectl apply -f /crs/cluster-external-egress-bytes-metric.yaml -n netobserv
          kubectl apply -f /crs/pod-egress-bytes-metric.yaml -n netobserv
        volumeMounts:
        - name: crs
          mountPath: /crs
      restartPolicy: Never
      volumes:
      - name: crs
        configMap:
          name: network-crs
      {{- if or .Values.tolerations .Values.global.tolerations }}
      tolerations:
        {{- with .Values.tolerations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.global.tolerations }}
        {{- toYaml . | nindent 8 }}
        {{- end }} 
      {{- end }}
      {{- if or .Values.nodeSelector .Values.global.nodeSelector }}
      nodeSelector:
        {{- with .Values.nodeSelector }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.global.nodeSelector }}
        {{- toYaml . | nindent 8 }}
        {{- end }} 
      {{- end }}
      {{- if or .Values.affinity .Values.global.affinity }}
      affinity:
        {{- with .Values.affinity }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.global.affinity }}
        {{- toYaml . | nindent 8 }}
        {{- end }} 
      {{- end }}         
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: network-crs
data:
  cluster-external-egress-bytes-metric.yaml: |-
{{ tpl (.Files.Get "files/randoli-network/cluster-external-egress-bytes-metric.yaml") . | nindent 4 }}
  pod-egress-bytes-metric.yaml: |-
{{ tpl (.Files.Get "files/randoli-network/pod-egress-bytes-metric.yaml") . | nindent 4 }}
  flow-collector.yaml: |-
{{ tpl (.Files.Get "files/randoli-network/flow-collector.yaml") . | nindent 4 }}
{{end}}             
---